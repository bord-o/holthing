let x = Some(99)
let y = None

type option<'a> = Some('a) | None

def test(opt: option<int>) -> int {
    match opt {
        Some(n) => if n == 0 then 1 else n
        None => 1
    }
}
requires `?n. $1 = None \/ $1 = Some n`
ensures `!n. test n != 0`

let res = test(y) + test(x)